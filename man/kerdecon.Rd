% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/kde_decon.R
\name{kerdecon}
\alias{kerdecon}
\title{Bivariate kernel deconvolution estimator}
\usage{
kerdecon(resol, samp, error, truncate, h, EMethod, columns, Kkernel,
  coord1Range, coord2Range, sigE = NULL, pstve = TRUE)
}
\arguments{
\item{resol}{An integer specifying the grid size on each coordinate. Power of
two are faster.}

\item{samp}{2-column matrix with the contaminated sample.}

\item{error}{Matrix with 2 columns, either with the pure sample of the error, or with the}

\item{truncate}{NULL by default. If the approximated characteristic function
of the error is smaller than truncate, it will make the integrand zero.
This provides numerical stability.}

\item{h}{Bivariate vector with the bandwidth parameters.}

\item{EMethod}{Method used to approximate the characteristic function of
the error. 1 or 2 if ecf of the char. fnc. of the kde is used, respectively.
differences obtained from the panel data structure. It can also accept "ecf" or "kde"
respectively.}

\item{columns}{Number of columns of the panel data. If there is one column,
it assumes that instead panel data, a pure sample of the error is provided.}

\item{Kkernel}{Kernel to be used. See 'ker' function.}

\item{coord1Range}{A bivariate vector with the limits of first coordinate of
the grid to estimate the density.}

\item{coord2Range}{A bivariate vector with the limits of second coordinate of
the grid to estimate the density.}

\item{sigE}{Bandwidth (2x2) matrix for the error. It is NULL by default
and it is required only when EMethod = 2.}

\item{pstve}{TRUE/FALSE determining whether returning zero for those
points where the estimate in negative.}

\item{x1}{Vector of size resol with the first coordinate grid.}

\item{x2}{Vector of size resol with the second coordinate grid.}

\item{z}{resol x resol grid with the estimated values.}
}
\value{
A list with the following elements:
}
\description{
It computes a bivariate kernel deconvolution estimator using the Fast
Fourier transform (FFT) on a grid.
}

